package com.techlabs.test;

import java.util.Scanner;
import com.techlabs.model.AccounType;
import com.techlabs.model.Account;

public class AccountTest {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        long accNum;
        boolean isExit = false;
        double maxAmount = 0;
        Account[] bankAccount = null;

        while (!isExit) {
            System.out.println("--------------Bank Menu------------");
            System.out.println("1. Create Account \n2. Debit Amount \n3. Credit Amount \n4. Get Maximum Amount \n5. Display Details \n6. Exit");

            System.out.println("Enter option to choose: ");
            int option = scanner.nextInt();

            switch (option) {
                case 1:
                    System.out.println("Enter number of accounts to be created: ");
                    int numberOfAccounts = scanner.nextInt();
                    bankAccount = new Account[numberOfAccounts];
                    for (int i = 0; i < bankAccount.length; i++) {
                        long accountNumber = Account.randomAccountNumber();
                        System.out.println("Your Account Number generated by Executive: " + accountNumber);
                        System.out.print("Enter your name: ");
                        String accountName = scanner.next();
                        System.out.print("Enter your Balance: ");
                        double accountBalance = scanner.nextDouble();
                        System.out.println("Enter your Type in numbers: 0) Default, 1) Savings, 2) Current, 3) Business");
                        AccounType accountType;

                        int accountOption = scanner.nextInt();
                        switch (accountOption) {
                            case 1:
                                accountType = AccounType.savings;
                                break;
                            case 2:
                                accountType = AccounType.current;
                                break;
                            case 3:
                                accountType = AccounType.buisness; // Corrected spelling
                                break;
                            default:
                                accountType = AccounType.savings;
                                break;
                        }

                        bankAccount[i] = new Account(accountNumber, accountName, accountBalance, accountType);
                    }

                    System.out.println("_Created Account_");
                    for (Account bank : bankAccount) {
                        System.out.println(bank); // Assuming Account class has a proper toString() method
                    }
                    break;

                case 2:
                    System.out.println("Enter your bank number: ");
                    accNum = scanner.nextLong();
                    if (bankAccount != null) {
                        boolean foundAccount = false;
                        for (Account bank : bankAccount) {
                            if (bank.getAccountNumber() == accNum) { // Fixed the condition to compare with account number
                                System.out.println("Enter amount to be debited: ");
                                double amount = scanner.nextDouble();
                                bank.debit(amount);
                                foundAccount = true;
                                break;
                            }
                        }
                        if (!foundAccount) {
                            System.out.println("Account not found.");
                        }
                    } else {
                        System.out.println("No accounts available.");
                    }
                    break;

                case 3:
                    System.out.println("Enter your bank number: ");
                    accNum = scanner.nextLong();
                    if (bankAccount != null) {
                        boolean foundAccount = false;
                        for (Account bank : bankAccount) {
                            if (bank.getAccountNumber() == accNum) { // Fixed the condition to compare with account number
                                System.out.println("Enter amount to be credited: ");
                                double amount = scanner.nextDouble();
                                bank.credit(amount);
                                foundAccount = true;
                                break;
                            }
                        }
                        if (!foundAccount) {
                            System.out.println("Account not found.");
                        }
                    } else {
                        System.out.println("No accounts available.");
                    }
                    break;

                case 4:
                    System.out.println("Calculating maximum amount: ");
                    if (bankAccount != null) {
                        for (Account bank : bankAccount) {
                            maxAmount = Math.max(bank.getAccountBalance(), maxAmount);
                        }
                        System.out.println("Maximum Amount: " + maxAmount);
                    } else {
                        System.out.println("No accounts available.");
                    }
                    break;

                case 5:
                    System.out.println("Displaying Account Details: ");
                    if (bankAccount != null) {
                        for (Account bank : bankAccount) {
                            System.out.println(bank);
                        }
                    } else {
                        System.out.println("No accounts available.");
                    }
                    break;

                case 6:
                    System.out.println("Thank you for using the app.");
                    isExit = true;
                    break;

                default:
                    System.out.println("Enter a valid option.");
            } // End of switch
        } // End of while

        scanner.close();
    }
}
